{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","NONE","sort","firstItem","secondItem","LENGTH","length","localeCompare","reverse","console","log","App","useState","setSortType","setIsReversed","className","type","cn","ALPHABET","onClick","current","map","good","SortByLength","SortAlphabetically","Reverse","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASK,SAASC,EACdC,EAAiBC,EAAoBC,GAGrC,IAAMC,EAAY,YAAOH,GAkBzB,OAhBIC,IAAaJ,EAASO,MACxBD,EAAaE,MAAK,SAACC,EAAWC,GAC5B,OAAON,IAAaJ,EAASW,OACzBF,EAAUG,OAASF,EAAWE,OAC9BH,EAAUI,cAAcH,MAI5BL,GACFC,EAAaQ,UAKfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SA5BJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+BE,IAAMiB,EAAgB,WAC3B,MAAgCC,mBAASlB,EAASO,MAAlD,mBAAOH,EAAP,KAAiBe,EAAjB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOb,EAAP,KAAmBe,EAAnB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYnB,IAAaJ,EAASwB,WAGtCC,QApB8B,WACpCN,EAAYnB,EAASwB,WAWjB,iCAaA,wBACEF,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYnB,IAAaJ,EAASW,SAGtCc,QArCwB,WAC9BN,EAAYnB,EAASW,SA4BjB,4BAaA,wBACEW,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAalB,IAGjBoB,QAtDmB,WACzBL,GAAc,SAAAM,GAAO,OAAKA,MA6CtB,sBAcIrB,GAAcD,IAAaJ,EAASO,OACpC,wBACEe,KAAK,SACLD,UAAU,6BACVI,QApDa,WACvBN,EAAYnB,EAASO,MACrBa,GAAc,IA+CN,sBAWN,6BACE,6BACGlB,EACCD,EACAG,EACAC,GACAsB,KAAI,SAAAC,GAAI,OACR,oBACE,UAAQ,OAERP,UAAWE,IACT,CACEM,aAAczB,IAAaJ,EAASW,OACpCmB,mBAAoB1B,IAAaJ,EAASwB,SAC1CO,QAAS1B,IAPf,SAWGuB,GATIA,cCnInBI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fb51e037.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[], sortType: SortType, isReversed: boolean,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((firstItem, secondItem) => {\n      return sortType === SortType.LENGTH\n        ? firstItem.length - secondItem.length\n        : firstItem.localeCompare(secondItem);\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const handleClickReverse = () => {\n    setIsReversed(current => !current);\n  };\n\n  const handleClickSortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleClickSortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleClickReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={handleClickSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={handleClickSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={handleClickReverse}\n        >\n          Reverse\n        </button>\n\n        {\n          ((isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-warning is-light\"\n              onClick={handleClickReset}\n            >\n              Reset\n            </button>\n          ))\n        }\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer,\n            sortType,\n            isReversed,\n          ).map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n              className={cn(\n                {\n                  SortByLength: sortType === SortType.LENGTH,\n                  SortAlphabetically: sortType === SortType.ALPHABET,\n                  Reverse: isReversed,\n                },\n              )}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}